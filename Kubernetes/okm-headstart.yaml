apiVersion: v1
kind: Service
metadata:
  name: okm-headstart
spec:
  selector:
      app: okm-headstart
  ports:
    - protocol: TCP
      port: 80

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sqlite-data
spec:
  accessModes:
    - ReadWriteOnce
    - ReadWriteMany
  resources:
    requests:
      storage: "1000Mi"
  volumeMode: Filesystem

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: okm-headstart
spec:
  selector:
    matchLabels:
      app: okm-headstart
  replicas: 1
  template:
    metadata:
      labels:
        app: okm-headstart
        ID: "15863"
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: workload.user.cattle.io/workloadselector
                    operator: In
                    values:
                      - apps.deployment-linkedcat-solr
              topologyKey: kubernetes.io/hostname
        podAntiAffinity: {}
      containers:
      - name: okm-headstart
        image: ghcr.io/acdh-oeaw/linkedcat-deployment/okm-headstart:latest
        imagePullPolicy: Always
        env:
        - name: JAVA_OPTS
          value: "-XX:+UseConcMarkSweepGC -XX:MaxHeapFreeRatio=20 -XX:MinHeapFreeRatio=10 -XX:GCTimeRatio=20 -Dlog4j2.formatMsgNoLookups=true"
        command: []
        args: ["/usr/bin/supervisord"]
        resources:
          limits:
            memory: 2048Mi
        stdin: true
        tty: true
        ports:
        - containerPort: 80
        volumeMounts:
        - name: sqlite-data
          mountPath: /var/www/server/storage/
      imagePullSecrets:
      - name: ghcr.io
      initContainers:
      - name: init-solr
        image: busybox
        command: ['sh', '-c', 'until nslookup solr.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for solr; sleep 2; done;']
      volumes:
        - name: sqlite-data
          persistentVolumeClaim:
            claimName: sqlite-data

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: okm-headstart
  annotations:
    nginx.ingress.kubernetes.io/client-body-buffer-size: 100m
    nginx.ingress.kubernetes.io/proxy-body-size: 100m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '3600'
    nginx.ingress.kubernetes.io/proxy-send-timeout: '3600'
spec:
  rules:
    - host: linkedcat.acdh.oeaw.ac.at
      http:
        paths:
          - backend:
              service:
                name: okm-headstart
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - linkedcat.acdh.oeaw.ac.at

